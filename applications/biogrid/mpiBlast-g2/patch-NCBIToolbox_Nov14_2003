*** ncbi/tools/readdb.c.orig	Sun Jan  4 15:46:23 2004
--- ncbi/tools/readdb.c	Sun Jan  4 15:47:20 2004
***************
*** 8529,8576 ****
  
            if(FormatDBClose(tmp_fdbp))
               return 9;
            options->volume++;
            
!           /* When second volume is created, add suffix .00 to all 
               first volume files */
            if (options->volume == 1)
              {
                Char  oldnamebuf[FILENAME_MAX], newnamebuf[FILENAME_MAX];
!               int len = StringLen(options->base_name) + 2;
                sprintf(oldnamebuf, "%s.%cin", options->base_name,
                        fdbp->options->is_protein ? 'p' : 'n');
!               sprintf(newnamebuf, "%s.00.%cin", options->base_name, 
                        fdbp->options->is_protein ? 'p' : 'n');
                if (FileLength(oldnamebuf) > 0)
                  FileRename(oldnamebuf, newnamebuf);
!               StringCpy(oldnamebuf + len, "hr");
                StringCpy(newnamebuf + len + 3, "hr");
                if (FileLength(oldnamebuf) > 0)
                  FileRename(oldnamebuf, newnamebuf);
!               StringCpy(oldnamebuf + len, "sq");
                StringCpy(newnamebuf + len + 3, "sq");
                if (FileLength(oldnamebuf) > 0)
                  FileRename(oldnamebuf, newnamebuf);
!               StringCpy(oldnamebuf + len, "nd");
                StringCpy(newnamebuf + len + 3, "nd");
                if (FileLength(oldnamebuf) > 0)
                  FileRename(oldnamebuf, newnamebuf);
!               StringCpy(oldnamebuf + len, "ni");
                StringCpy(newnamebuf + len + 3, "ni");
                if (FileLength(oldnamebuf) > 0)
                  FileRename(oldnamebuf, newnamebuf);
!               StringCpy(oldnamebuf + len, "sd");
                StringCpy(newnamebuf + len + 3, "sd");
                if (FileLength(oldnamebuf) > 0)
                  FileRename(oldnamebuf, newnamebuf);
!               StringCpy(oldnamebuf + len, "si");
                StringCpy(newnamebuf + len + 3, "si");
                if (FileLength(oldnamebuf) > 0)
                  FileRename(oldnamebuf, newnamebuf);
               if (options->dump_info) {
!                  StringCpy(oldnamebuf + len, "di");
                   StringCpy(newnamebuf + len + 3, "di");
                   if (FileLength(oldnamebuf) > 0)
                       FileRename(oldnamebuf, newnamebuf);
               }
               if (options->is_protein) {
--- 8529,8576 ----
  
            if(FormatDBClose(tmp_fdbp))
               return 9;
            options->volume++;
            
!           /* When second volume is created, add suffix .000 to all 
               first volume files */
            if (options->volume == 1)
              {
                Char  oldnamebuf[FILENAME_MAX], newnamebuf[FILENAME_MAX];
!               int len = StringLen(options->base_name) + 3;
                sprintf(oldnamebuf, "%s.%cin", options->base_name,
                        fdbp->options->is_protein ? 'p' : 'n');
!               sprintf(newnamebuf, "%s.000.%cin", options->base_name, 
                        fdbp->options->is_protein ? 'p' : 'n');
                if (FileLength(oldnamebuf) > 0)
                  FileRename(oldnamebuf, newnamebuf);
!               StringCpy(oldnamebuf + len-1, "hr");
                StringCpy(newnamebuf + len + 3, "hr");
                if (FileLength(oldnamebuf) > 0)
                  FileRename(oldnamebuf, newnamebuf);
!               StringCpy(oldnamebuf + len-1, "sq");
                StringCpy(newnamebuf + len + 3, "sq");
                if (FileLength(oldnamebuf) > 0)
                  FileRename(oldnamebuf, newnamebuf);
!               StringCpy(oldnamebuf + len-1, "nd");
                StringCpy(newnamebuf + len + 3, "nd");
                if (FileLength(oldnamebuf) > 0)
                  FileRename(oldnamebuf, newnamebuf);
!               StringCpy(oldnamebuf + len-1, "ni");
                StringCpy(newnamebuf + len + 3, "ni");
                if (FileLength(oldnamebuf) > 0)
                  FileRename(oldnamebuf, newnamebuf);
!               StringCpy(oldnamebuf + len-1, "sd");
                StringCpy(newnamebuf + len + 3, "sd");
                if (FileLength(oldnamebuf) > 0)
                  FileRename(oldnamebuf, newnamebuf);
!               StringCpy(oldnamebuf + len-1, "si");
                StringCpy(newnamebuf + len + 3, "si");
                if (FileLength(oldnamebuf) > 0)
                  FileRename(oldnamebuf, newnamebuf);
               if (options->dump_info) {
!                  StringCpy(oldnamebuf + len-1, "di");
                   StringCpy(newnamebuf + len + 3, "di");
                   if (FileLength(oldnamebuf) > 0)
                       FileRename(oldnamebuf, newnamebuf);
               }
               if (options->is_protein) {
***************
*** 8590,8601 ****
                options->base_name = StringSave(newnamebuf);
              }
  
            {
              CharPtr ptr;
!           ptr = options->base_name + StringLen(options->base_name) - 2;
!           sprintf(ptr, "%02ld", (long) options->volume);
            }
            
            if ((tmp_fdbp = FormatDBInit(options)) == NULL)
              return 2;
            
--- 8590,8601 ----
                options->base_name = StringSave(newnamebuf);
              }
  
            {
              CharPtr ptr;
!           ptr = options->base_name + StringLen(options->base_name) - 3;
!           sprintf(ptr, "%03ld", (long) options->volume);
            }
            
            if ((tmp_fdbp = FormatDBInit(options)) == NULL)
              return 2;
            
***************
*** 11494,11504 ****
              count = 0;
              if(FormatDBClose(fdbp))
                 return 9;
              
              if(Bases_In_Volume > 1) {
!                sprintf(filenamebuf, "%s.%02ld", 
                         options->base_name, (long) volume);
                 options->base_name = StringSave(filenamebuf);
                 volume++;
              }
              
--- 11494,11504 ----
              count = 0;
              if(FormatDBClose(fdbp))
                 return 9;
              
              if(Bases_In_Volume > 1) {
!                sprintf(filenamebuf, "%s.%03ld", 
                         options->base_name, (long) volume);
                 options->base_name = StringSave(filenamebuf);
                 volume++;
              }
              
***************
*** 11552,11562 ****
      
      if (volumes == 0 && parent != NULL)
         fprintf(fd, "%s", parent);
      else {
         for(i = 0; i < volumes; i++) {
!           fprintf(fd, "%s.%02ld ", basename, (long) i);
         }
      }
      fprintf(fd, "\n#\n");
      
      if (gilist)
--- 11552,11562 ----
      
      if (volumes == 0 && parent != NULL)
         fprintf(fd, "%s", parent);
      else {
         for(i = 0; i < volumes; i++) {
!           fprintf(fd, "%s.%03ld ", basename, (long) i);
         }
      }
      fprintf(fd, "\n#\n");
      
      if (gilist)
***************
*** 11611,11621 ****
  
      for (i = 0; i < nvols; i++) {
  
          /* convert nvols to a string */
          MemSet(numstr, 0, sizeof(numstr));
!         sprintf(numstr, ".%02ld ", (long) i);
          retval = StringCat(retval, basename);
          retval = StringCat(retval, numstr);
      }
      retval[StringLen(retval)] = NULLB;
  
--- 11611,11621 ----
  
      for (i = 0; i < nvols; i++) {
  
          /* convert nvols to a string */
          MemSet(numstr, 0, sizeof(numstr));
!         sprintf(numstr, ".%03ld ", (long) i);
          retval = StringCat(retval, basename);
          retval = StringCat(retval, numstr);
      }
      retval[StringLen(retval)] = NULLB;
  

*** ncbi/demo/formatdb.c.orig	Sun Jan  4 18:18:39 2004
--- ncbi/demo/formatdb.c	Sun Jan  4 18:05:45 2004
***************
*** 531,537 ****
  
  /* Fasta file delimiters */
  #define DELIM " "
! #define MAX_VOLUMES 99
  
  Boolean FDBCheckFastaInputs(CharPtr fasta_files, Int4 is_prot, Int8
          bases_per_vol, Int4Ptr num_inputs)
--- 531,537 ----
  
  /* Fasta file delimiters */
  #define DELIM " "
! #define MAX_VOLUMES 999
  
  Boolean FDBCheckFastaInputs(CharPtr fasta_files, Int4 is_prot, Int8
          bases_per_vol, Int4Ptr num_inputs)
